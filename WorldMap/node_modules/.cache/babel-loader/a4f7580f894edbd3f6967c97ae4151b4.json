{"ast":null,"code":"var _jsxFileName = \"/Users/chenze/Desktop/SWEN422/swen422-assignment3-1/Example/src/Components/LineChart.js\",\n  _s = $RefreshSig$();\nimport { axisBottom, axisLeft, curveCardinal, line, max, scaleLinear, select, json, scaleBand } from \"d3\";\nimport { useEffect, useRef, useState } from \"react\";\nimport \"./LineChart.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const LineChart = _ref => {\n  _s();\n  let {\n    countryName,\n    setCountryName\n  } = _ref;\n  //   const [testdata] = useState([25, 50, 35, 15, 94, 10]);\n  //   const [vacdata, setvacData] = useState(\n  //     data?.vacData?.data?.map((obj) => {\n  //       if (obj?.daily_people_vaccinated === undefined) {\n  //         return 0;\n  //       }\n  //       return obj?.daily_people_vaccinated / 100;\n  //     })\n  //   );\n\n  const [dailydata, setdailyData] = useState();\n  const [date, setDate] = useState();\n  const [noMatch, setNoMatch] = useState();\n  const [Data, setData] = useState();\n  const [totaldata, setTotaldata] = useState();\n  const [yAxisName, setyAxisName] = useState();\n  const [clickchange, setClickChange] = useState(\"Daily People Vaccinated\");\n  const svgref = useRef();\n  const render = (w, h, svg) => {\n    //add this to remove the links\n    svg.selectAll(\"g\").remove();\n    svg.selectAll(\"path\").remove();\n    svg.selectAll(\"text\").remove();\n    // title\n    svg.append(\"text\").attr(\"x\", w / 2).attr(\"y\", 0).attr(\"text-anchor\", \"middle\").style(\"font-family\", \"Times New Roman\").style(\"font-size\", 20).text(clickchange + \" : \" + countryName);\n    //xLabel\n    svg.append(\"text\").attr(\"x\", w / 2).attr(\"y\", h + 30).attr(\"text-anchor\", \"middle\").style(\"font-family\", \"Times New Roman\").style(\"font-size\", 15).text(\"Date\");\n\n    // yLabel\n    svg.append(\"text\").attr(\"text-anchor\", \"middle\").attr(\"y\", -150).attr(\"transform\", \"translate(60,\" + h / 2 + \")rotate(-90)\").style(\"font-family\", \"Times New Roman\").style(\"font-size\", 15).text(\"Cases\");\n    // setting scalling\n    const xScale = scaleLinear().domain([0, (dailydata === null || dailydata === void 0 ? void 0 : dailydata.length) - 1]).range([0, w]);\n    const yScale = scaleLinear().domain([0, max(dailydata) + max(dailydata) / 10]).range([h, -1]);\n    const getLine = line().x((d, i) => {\n      return xScale(i);\n    }).y(yScale);\n    // .curve(curveCardinal);\n\n    // setting the axis\n    const xAxis = axisBottom(xScale).ticks(5).tickFormat(i => {\n      return date[i];\n    });\n    const yAxis = axisLeft(yScale).ticks(5);\n    svg.append(\"g\").call(xAxis).attr(\"transform\", `translate(0,${h})`);\n    svg.append(\"g\").call(yAxis);\n\n    // // setting up the data for the svg\n    svg.selectAll(\".line\").data([dailydata]).join(\"path\").attr(\"d\", d => {\n      return getLine(d);\n    }).attr(\"class\", \"lineChart\");\n  };\n  useEffect(() => {\n    json(\"vaccinations.json\", {}).then(data => {\n      var _tempData$countryName, _tempData$countryName2, _tempData$countryName3, _tempData$countryName4, _tempData$countryName5, _tempData$countryName6, _tempData$countryName7, _tempData$countryName8;\n      //  console.log(data[0]);\n      // setvacData(data[0]);\n      const tempData = data === null || data === void 0 ? void 0 : data.reduce((accumulator, d) => {\n        // get the\n        const obj = {\n          country: d.country,\n          data: d.data\n        };\n        // console.log(obj);\n        accumulator[d.country] = obj;\n        return accumulator;\n      }, {});\n      // list of the daily people vaccinated\n      const dailydata = (_tempData$countryName = tempData[countryName]) === null || _tempData$countryName === void 0 ? void 0 : (_tempData$countryName2 = _tempData$countryName.data) === null || _tempData$countryName2 === void 0 ? void 0 : _tempData$countryName2.map(obj => {\n        if ((obj === null || obj === void 0 ? void 0 : obj.daily_people_vaccinated) === undefined) {\n          return 0;\n        }\n        return obj === null || obj === void 0 ? void 0 : obj.daily_people_vaccinated;\n      });\n\n      // list of the daily people vaccinated\n      const totaldata = (_tempData$countryName3 = tempData[countryName]) === null || _tempData$countryName3 === void 0 ? void 0 : (_tempData$countryName4 = _tempData$countryName3.data) === null || _tempData$countryName4 === void 0 ? void 0 : _tempData$countryName4.map(obj => {\n        if ((obj === null || obj === void 0 ? void 0 : obj.total_vaccinations) !== undefined) {\n          const temp = {\n            total: obj === null || obj === void 0 ? void 0 : obj.total_vaccinations,\n            date: obj === null || obj === void 0 ? void 0 : obj.date\n          };\n          return temp;\n        }\n      });\n\n      // date\n      const date = (_tempData$countryName5 = tempData[countryName]) === null || _tempData$countryName5 === void 0 ? void 0 : (_tempData$countryName6 = _tempData$countryName5.data) === null || _tempData$countryName6 === void 0 ? void 0 : _tempData$countryName6.map(obj => {\n        return obj === null || obj === void 0 ? void 0 : obj.date;\n      });\n      // a object\n      const Data = (_tempData$countryName7 = tempData[countryName]) === null || _tempData$countryName7 === void 0 ? void 0 : (_tempData$countryName8 = _tempData$countryName7.data) === null || _tempData$countryName8 === void 0 ? void 0 : _tempData$countryName8.map(obj => {\n        const daily = (obj === null || obj === void 0 ? void 0 : obj.daily_people_vaccinated) === undefined ? 0 : obj === null || obj === void 0 ? void 0 : obj.daily_people_vaccinated;\n        const temp = {\n          daily_people_vaccinated: daily,\n          date: obj === null || obj === void 0 ? void 0 : obj.date\n        };\n        return temp;\n      });\n      setData(Data);\n      setDate(date);\n      if (clickchange === \"Daily People Vaccinated\") {\n        setdailyData(dailydata);\n      } else {\n        //  const temptotal =  totaldata.map((obj)=>{\n        //     return obj.\n\n        //   })\n        setdailyData(totaldata === null || totaldata === void 0 ? void 0 : totaldata.map(obj => {\n          return obj === null || obj === void 0 ? void 0 : obj.total;\n        }));\n        const dd = totaldata === null || totaldata === void 0 ? void 0 : totaldata.map(obj => {\n          return obj === null || obj === void 0 ? void 0 : obj.date;\n        });\n        console.log(dd);\n        // setDate(\n\n        // );\n      }\n    });\n\n    const w = 600;\n    const h = 400;\n    const svg = select(svgref.current).attr(\"width\", w).attr(\"height\", h).style(\"background\", \"aliceblue\").style(\"margin-top\", \"100\").style(\"margin-left\", \"50\").style(\"overflow\", \"visible\");\n    if (dailydata && date) {\n      // setdailyData(tempData[countryName]);\n      render(w, h, svg);\n      setNoMatch(false);\n    } else {\n      setNoMatch(true);\n    }\n  });\n  //   daily_people_vaccinated: 28\n  // daily_people_vaccinated_per_hundred: 0.001\n  // daily_vaccinations: 2336\n  // daily_vaccinations_per_million: 455\n  // daily_vaccinations_raw: 2651\n  // date: \"2022-09-23\"\n  // people_fully_vaccinated: 4132410\n  // people_fully_vaccinated_per_hundred: 80.56\n  // people_vaccinated: 4297495\n  // people_vaccinated_per_hundred: 83.78\n  // total_boosters: 3332838\n  // total_boosters_per_hundred: 64.97\n  // total_vaccinations: 11762743\n  const handleClickDaily = () => {\n    setClickChange(\"Daily People Vaccinated\");\n  };\n  const handleClickTotal = () => {\n    setClickChange(\"Total Vaccinations\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClickDaily,\n      children: \"Daily people vaccinated\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClickTotal,\n      children: \"Total vaccinations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), noMatch ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No matches, please select another country\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(LineChart, \"Qy7vPJnGJKkN4hIwFil0t4jyEhY=\");\n_c = LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["axisBottom","axisLeft","curveCardinal","line","max","scaleLinear","select","json","scaleBand","useEffect","useRef","useState","LineChart","countryName","setCountryName","dailydata","setdailyData","date","setDate","noMatch","setNoMatch","Data","setData","totaldata","setTotaldata","yAxisName","setyAxisName","clickchange","setClickChange","svgref","render","w","h","svg","selectAll","remove","append","attr","style","text","xScale","domain","length","range","yScale","getLine","x","d","i","y","xAxis","ticks","tickFormat","yAxis","call","data","join","then","tempData","reduce","accumulator","obj","country","map","daily_people_vaccinated","undefined","total_vaccinations","temp","total","daily","dd","console","log","current","handleClickDaily","handleClickTotal"],"sources":["/Users/chenze/Desktop/SWEN422/swen422-assignment3-1/Example/src/Components/LineChart.js"],"sourcesContent":["import {\n  axisBottom,\n  axisLeft,\n  curveCardinal,\n  line,\n  max,\n  scaleLinear,\n  select,\n  json,\n  scaleBand,\n} from \"d3\";\nimport { useEffect, useRef, useState } from \"react\";\nimport \"./LineChart.css\";\n\nexport const LineChart = ({ countryName, setCountryName }) => {\n  //   const [testdata] = useState([25, 50, 35, 15, 94, 10]);\n  //   const [vacdata, setvacData] = useState(\n  //     data?.vacData?.data?.map((obj) => {\n  //       if (obj?.daily_people_vaccinated === undefined) {\n  //         return 0;\n  //       }\n  //       return obj?.daily_people_vaccinated / 100;\n  //     })\n  //   );\n\n  const [dailydata, setdailyData] = useState();\n  const [date, setDate] = useState();\n  const [noMatch, setNoMatch] = useState();\n  const [Data, setData] = useState();\n  const [totaldata, setTotaldata] = useState();\n  const [yAxisName, setyAxisName] = useState();\n  const [clickchange, setClickChange] = useState(\"Daily People Vaccinated\");\n  const svgref = useRef();\n  const render = (w, h, svg) => {\n    //add this to remove the links\n    svg.selectAll(\"g\").remove();\n    svg.selectAll(\"path\").remove();\n    svg.selectAll(\"text\").remove();\n    // title\n    svg\n      .append(\"text\")\n      .attr(\"x\", w / 2)\n      .attr(\"y\", 0)\n      .attr(\"text-anchor\", \"middle\")\n      .style(\"font-family\", \"Times New Roman\")\n      .style(\"font-size\", 20)\n      .text(clickchange + \" : \" + countryName);\n    //xLabel\n    svg\n      .append(\"text\")\n      .attr(\"x\", w / 2)\n      .attr(\"y\", h + 30)\n      .attr(\"text-anchor\", \"middle\")\n      .style(\"font-family\", \"Times New Roman\")\n      .style(\"font-size\", 15)\n      .text(\"Date\");\n\n    // yLabel\n    svg\n      .append(\"text\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"y\", -150)\n      .attr(\"transform\", \"translate(60,\" + h / 2 + \")rotate(-90)\")\n      .style(\"font-family\", \"Times New Roman\")\n      .style(\"font-size\", 15)\n      .text(\"Cases\");\n    // setting scalling\n    const xScale = scaleLinear()\n      .domain([0, dailydata?.length - 1])\n      .range([0, w]);\n\n    const yScale = scaleLinear()\n      .domain([0, max(dailydata) + max(dailydata) / 10])\n      .range([h, -1]);\n    const getLine = line()\n      .x((d, i) => {\n        return xScale(i);\n      })\n      .y(yScale);\n    // .curve(curveCardinal);\n\n    // setting the axis\n    const xAxis = axisBottom(xScale)\n      .ticks(5)\n      .tickFormat((i) => {\n        return date[i];\n      });\n    const yAxis = axisLeft(yScale).ticks(5);\n\n    svg.append(\"g\").call(xAxis).attr(\"transform\", `translate(0,${h})`);\n    svg.append(\"g\").call(yAxis);\n\n    // // setting up the data for the svg\n    svg\n      .selectAll(\".line\")\n      .data([dailydata])\n      .join(\"path\")\n      .attr(\"d\", (d) => {\n        return getLine(d);\n      })\n      .attr(\"class\", \"lineChart\");\n  };\n  useEffect(() => {\n    json(\"vaccinations.json\", {}).then((data) => {\n      //  console.log(data[0]);\n      // setvacData(data[0]);\n      const tempData = data?.reduce((accumulator, d) => {\n        // get the\n        const obj = {\n          country: d.country,\n          data: d.data,\n        };\n        // console.log(obj);\n        accumulator[d.country] = obj;\n        return accumulator;\n      }, {});\n      // list of the daily people vaccinated\n      const dailydata = tempData[countryName]?.data?.map((obj) => {\n        if (obj?.daily_people_vaccinated === undefined) {\n          return 0;\n        }\n        return obj?.daily_people_vaccinated;\n      });\n\n      // list of the daily people vaccinated\n      const totaldata = tempData[countryName]?.data?.map((obj) => {\n        if (obj?.total_vaccinations !== undefined) {\n          const temp = {\n            total: obj?.total_vaccinations,\n            date: obj?.date,\n          };\n          return temp;\n        }\n      });\n\n      // date\n      const date = tempData[countryName]?.data?.map((obj) => {\n        return obj?.date;\n      });\n      // a object\n      const Data = tempData[countryName]?.data?.map((obj) => {\n        const daily =\n          obj?.daily_people_vaccinated === undefined\n            ? 0\n            : obj?.daily_people_vaccinated;\n\n        const temp = {\n          daily_people_vaccinated: daily,\n          date: obj?.date,\n        };\n        return temp;\n      });\n      setData(Data);\n      setDate(date);\n      if (clickchange === \"Daily People Vaccinated\") {\n        setdailyData(dailydata);\n      } else {\n        //  const temptotal =  totaldata.map((obj)=>{\n        //     return obj.\n\n        //   })\n        setdailyData(\n          totaldata?.map((obj) => {\n            return obj?.total;\n          })\n        );\n        const dd = totaldata?.map((obj) => {\n          return obj?.date;\n        });\n        console.log(dd);\n        // setDate(\n\n        // );\n      }\n    });\n    const w = 600;\n    const h = 400;\n    const svg = select(svgref.current)\n      .attr(\"width\", w)\n      .attr(\"height\", h)\n      .style(\"background\", \"aliceblue\")\n      .style(\"margin-top\", \"100\")\n      .style(\"margin-left\", \"50\")\n      .style(\"overflow\", \"visible\");\n    if (dailydata && date) {\n      // setdailyData(tempData[countryName]);\n      render(w, h, svg);\n      setNoMatch(false);\n    } else {\n      setNoMatch(true);\n    }\n  });\n  //   daily_people_vaccinated: 28\n  // daily_people_vaccinated_per_hundred: 0.001\n  // daily_vaccinations: 2336\n  // daily_vaccinations_per_million: 455\n  // daily_vaccinations_raw: 2651\n  // date: \"2022-09-23\"\n  // people_fully_vaccinated: 4132410\n  // people_fully_vaccinated_per_hundred: 80.56\n  // people_vaccinated: 4297495\n  // people_vaccinated_per_hundred: 83.78\n  // total_boosters: 3332838\n  // total_boosters_per_hundred: 64.97\n  // total_vaccinations: 11762743\n  const handleClickDaily = () => {\n    setClickChange(\"Daily People Vaccinated\");\n  };\n  const handleClickTotal = () => {\n    setClickChange(\"Total Vaccinations\");\n  };\n\n  return (\n    <>\n      <button onClick={handleClickDaily}>Daily people vaccinated</button>\n      <button onClick={handleClickTotal}>Total vaccinations</button>\n\n      {noMatch ? (\n        <p>No matches, please select another country</p>\n      ) : (\n        <svg ref={svgref}></svg>\n      )}\n    </>\n  );\n};\n"],"mappings":";;AAAA,SACEA,UAAU,EACVC,QAAQ,EACRC,aAAa,EACbC,IAAI,EACJC,GAAG,EACHC,WAAW,EACXC,MAAM,EACNC,IAAI,EACJC,SAAS,QACJ,IAAI;AACX,SAASC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACnD,OAAO,iBAAiB;AAAC;AAAA;AAEzB,OAAO,MAAMC,SAAS,GAAG,QAAqC;EAAA;EAAA,IAApC;IAAEC,WAAW;IAAEC;EAAe,CAAC;EACvD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,EAAE;EAC5C,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,EAAE;EAClC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,EAAE;EACxC,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,EAAE;EAClC,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,EAAE;EAC5C,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,EAAE;EAC5C,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,yBAAyB,CAAC;EACzE,MAAMkB,MAAM,GAAGnB,MAAM,EAAE;EACvB,MAAMoB,MAAM,GAAG,CAACC,CAAC,EAAEC,CAAC,EAAEC,GAAG,KAAK;IAC5B;IACAA,GAAG,CAACC,SAAS,CAAC,GAAG,CAAC,CAACC,MAAM,EAAE;IAC3BF,GAAG,CAACC,SAAS,CAAC,MAAM,CAAC,CAACC,MAAM,EAAE;IAC9BF,GAAG,CAACC,SAAS,CAAC,MAAM,CAAC,CAACC,MAAM,EAAE;IAC9B;IACAF,GAAG,CACAG,MAAM,CAAC,MAAM,CAAC,CACdC,IAAI,CAAC,GAAG,EAAEN,CAAC,GAAG,CAAC,CAAC,CAChBM,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CACZA,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,CAC7BC,KAAK,CAAC,aAAa,EAAE,iBAAiB,CAAC,CACvCA,KAAK,CAAC,WAAW,EAAE,EAAE,CAAC,CACtBC,IAAI,CAACZ,WAAW,GAAG,KAAK,GAAGd,WAAW,CAAC;IAC1C;IACAoB,GAAG,CACAG,MAAM,CAAC,MAAM,CAAC,CACdC,IAAI,CAAC,GAAG,EAAEN,CAAC,GAAG,CAAC,CAAC,CAChBM,IAAI,CAAC,GAAG,EAAEL,CAAC,GAAG,EAAE,CAAC,CACjBK,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,CAC7BC,KAAK,CAAC,aAAa,EAAE,iBAAiB,CAAC,CACvCA,KAAK,CAAC,WAAW,EAAE,EAAE,CAAC,CACtBC,IAAI,CAAC,MAAM,CAAC;;IAEf;IACAN,GAAG,CACAG,MAAM,CAAC,MAAM,CAAC,CACdC,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,CAC7BA,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CACfA,IAAI,CAAC,WAAW,EAAE,eAAe,GAAGL,CAAC,GAAG,CAAC,GAAG,cAAc,CAAC,CAC3DM,KAAK,CAAC,aAAa,EAAE,iBAAiB,CAAC,CACvCA,KAAK,CAAC,WAAW,EAAE,EAAE,CAAC,CACtBC,IAAI,CAAC,OAAO,CAAC;IAChB;IACA,MAAMC,MAAM,GAAGnC,WAAW,EAAE,CACzBoC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAA1B,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAE2B,MAAM,IAAG,CAAC,CAAC,CAAC,CAClCC,KAAK,CAAC,CAAC,CAAC,EAAEZ,CAAC,CAAC,CAAC;IAEhB,MAAMa,MAAM,GAAGvC,WAAW,EAAE,CACzBoC,MAAM,CAAC,CAAC,CAAC,EAAErC,GAAG,CAACW,SAAS,CAAC,GAAGX,GAAG,CAACW,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC,CACjD4B,KAAK,CAAC,CAACX,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACjB,MAAMa,OAAO,GAAG1C,IAAI,EAAE,CACnB2C,CAAC,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MACX,OAAOR,MAAM,CAACQ,CAAC,CAAC;IAClB,CAAC,CAAC,CACDC,CAAC,CAACL,MAAM,CAAC;IACZ;;IAEA;IACA,MAAMM,KAAK,GAAGlD,UAAU,CAACwC,MAAM,CAAC,CAC7BW,KAAK,CAAC,CAAC,CAAC,CACRC,UAAU,CAAEJ,CAAC,IAAK;MACjB,OAAO/B,IAAI,CAAC+B,CAAC,CAAC;IAChB,CAAC,CAAC;IACJ,MAAMK,KAAK,GAAGpD,QAAQ,CAAC2C,MAAM,CAAC,CAACO,KAAK,CAAC,CAAC,CAAC;IAEvClB,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACkB,IAAI,CAACJ,KAAK,CAAC,CAACb,IAAI,CAAC,WAAW,EAAG,eAAcL,CAAE,GAAE,CAAC;IAClEC,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACkB,IAAI,CAACD,KAAK,CAAC;;IAE3B;IACApB,GAAG,CACAC,SAAS,CAAC,OAAO,CAAC,CAClBqB,IAAI,CAAC,CAACxC,SAAS,CAAC,CAAC,CACjByC,IAAI,CAAC,MAAM,CAAC,CACZnB,IAAI,CAAC,GAAG,EAAGU,CAAC,IAAK;MAChB,OAAOF,OAAO,CAACE,CAAC,CAAC;IACnB,CAAC,CAAC,CACDV,IAAI,CAAC,OAAO,EAAE,WAAW,CAAC;EAC/B,CAAC;EACD5B,SAAS,CAAC,MAAM;IACdF,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC,CAAC,CAACkD,IAAI,CAAEF,IAAI,IAAK;MAAA;MAC3C;MACA;MACA,MAAMG,QAAQ,GAAGH,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEI,MAAM,CAAC,CAACC,WAAW,EAAEb,CAAC,KAAK;QAChD;QACA,MAAMc,GAAG,GAAG;UACVC,OAAO,EAAEf,CAAC,CAACe,OAAO;UAClBP,IAAI,EAAER,CAAC,CAACQ;QACV,CAAC;QACD;QACAK,WAAW,CAACb,CAAC,CAACe,OAAO,CAAC,GAAGD,GAAG;QAC5B,OAAOD,WAAW;MACpB,CAAC,EAAE,CAAC,CAAC,CAAC;MACN;MACA,MAAM7C,SAAS,4BAAG2C,QAAQ,CAAC7C,WAAW,CAAC,oFAArB,sBAAuB0C,IAAI,2DAA3B,uBAA6BQ,GAAG,CAAEF,GAAG,IAAK;QAC1D,IAAI,CAAAA,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEG,uBAAuB,MAAKC,SAAS,EAAE;UAC9C,OAAO,CAAC;QACV;QACA,OAAOJ,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEG,uBAAuB;MACrC,CAAC,CAAC;;MAEF;MACA,MAAMzC,SAAS,6BAAGmC,QAAQ,CAAC7C,WAAW,CAAC,qFAArB,uBAAuB0C,IAAI,2DAA3B,uBAA6BQ,GAAG,CAAEF,GAAG,IAAK;QAC1D,IAAI,CAAAA,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEK,kBAAkB,MAAKD,SAAS,EAAE;UACzC,MAAME,IAAI,GAAG;YACXC,KAAK,EAAEP,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEK,kBAAkB;YAC9BjD,IAAI,EAAE4C,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAE5C;UACb,CAAC;UACD,OAAOkD,IAAI;QACb;MACF,CAAC,CAAC;;MAEF;MACA,MAAMlD,IAAI,6BAAGyC,QAAQ,CAAC7C,WAAW,CAAC,qFAArB,uBAAuB0C,IAAI,2DAA3B,uBAA6BQ,GAAG,CAAEF,GAAG,IAAK;QACrD,OAAOA,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAE5C,IAAI;MAClB,CAAC,CAAC;MACF;MACA,MAAMI,IAAI,6BAAGqC,QAAQ,CAAC7C,WAAW,CAAC,qFAArB,uBAAuB0C,IAAI,2DAA3B,uBAA6BQ,GAAG,CAAEF,GAAG,IAAK;QACrD,MAAMQ,KAAK,GACT,CAAAR,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEG,uBAAuB,MAAKC,SAAS,GACtC,CAAC,GACDJ,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEG,uBAAuB;QAElC,MAAMG,IAAI,GAAG;UACXH,uBAAuB,EAAEK,KAAK;UAC9BpD,IAAI,EAAE4C,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAE5C;QACb,CAAC;QACD,OAAOkD,IAAI;MACb,CAAC,CAAC;MACF7C,OAAO,CAACD,IAAI,CAAC;MACbH,OAAO,CAACD,IAAI,CAAC;MACb,IAAIU,WAAW,KAAK,yBAAyB,EAAE;QAC7CX,YAAY,CAACD,SAAS,CAAC;MACzB,CAAC,MAAM;QACL;QACA;;QAEA;QACAC,YAAY,CACVO,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEwC,GAAG,CAAEF,GAAG,IAAK;UACtB,OAAOA,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEO,KAAK;QACnB,CAAC,CAAC,CACH;QACD,MAAME,EAAE,GAAG/C,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEwC,GAAG,CAAEF,GAAG,IAAK;UACjC,OAAOA,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAE5C,IAAI;QAClB,CAAC,CAAC;QACFsD,OAAO,CAACC,GAAG,CAACF,EAAE,CAAC;QACf;;QAEA;MACF;IACF,CAAC,CAAC;;IACF,MAAMvC,CAAC,GAAG,GAAG;IACb,MAAMC,CAAC,GAAG,GAAG;IACb,MAAMC,GAAG,GAAG3B,MAAM,CAACuB,MAAM,CAAC4C,OAAO,CAAC,CAC/BpC,IAAI,CAAC,OAAO,EAAEN,CAAC,CAAC,CAChBM,IAAI,CAAC,QAAQ,EAAEL,CAAC,CAAC,CACjBM,KAAK,CAAC,YAAY,EAAE,WAAW,CAAC,CAChCA,KAAK,CAAC,YAAY,EAAE,KAAK,CAAC,CAC1BA,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,CAC1BA,KAAK,CAAC,UAAU,EAAE,SAAS,CAAC;IAC/B,IAAIvB,SAAS,IAAIE,IAAI,EAAE;MACrB;MACAa,MAAM,CAACC,CAAC,EAAEC,CAAC,EAAEC,GAAG,CAAC;MACjBb,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,MAAM;MACLA,UAAU,CAAC,IAAI,CAAC;IAClB;EACF,CAAC,CAAC;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAMsD,gBAAgB,GAAG,MAAM;IAC7B9C,cAAc,CAAC,yBAAyB,CAAC;EAC3C,CAAC;EACD,MAAM+C,gBAAgB,GAAG,MAAM;IAC7B/C,cAAc,CAAC,oBAAoB,CAAC;EACtC,CAAC;EAED,oBACE;IAAA,wBACE;MAAQ,OAAO,EAAE8C,gBAAiB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAiC,eACnE;MAAQ,OAAO,EAAEC,gBAAiB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA4B,EAE7DxD,OAAO,gBACN;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgD,gBAEhD;MAAK,GAAG,EAAEU;IAAO;MAAA;MAAA;MAAA;IAAA,QAClB;EAAA,gBACA;AAEP,CAAC;AAAC,GAlNWjB,SAAS;AAAA,KAATA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module"}