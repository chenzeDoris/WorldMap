{"ast":null,"code":"var _jsxFileName = \"/Users/chenze/Desktop/SWEN422/swen422-assignment3-1/Example/src/Components/LineChart.js\",\n  _s = $RefreshSig$();\nimport { axisBottom, axisLeft, curveCardinal, line, max, scaleLinear, select, json } from \"d3\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LineChart = _ref => {\n  _s();\n  let {\n    countryName,\n    setCountryName\n  } = _ref;\n  //   const [testdata] = useState([25, 50, 35, 15, 94, 10]);\n  //   const [vacdata, setvacData] = useState(\n  //     data?.vacData?.data?.map((obj) => {\n  //       if (obj?.daily_people_vaccinated === undefined) {\n  //         return 0;\n  //       }\n  //       return obj?.daily_people_vaccinated / 100;\n  //     })\n  //   );\n  const [dailydata, setdailyData] = useState();\n  const svgref = useRef();\n  const render = () => {};\n  useEffect(() => {\n    json(\"vaccinations.json\", {}).then(data => {\n      var _tempData$countryName, _tempData$countryName2;\n      //  console.log(data[0]);\n      // setvacData(data[0]);\n      const tempData = data === null || data === void 0 ? void 0 : data.reduce((accumulator, d) => {\n        // get the\n        const obj = {\n          country: d.country,\n          data: d.data\n        };\n        // console.log(obj);\n        accumulator[d.country] = obj;\n        return accumulator;\n      }, {});\n      const dailydata = (_tempData$countryName = tempData[countryName]) === null || _tempData$countryName === void 0 ? void 0 : (_tempData$countryName2 = _tempData$countryName.data) === null || _tempData$countryName2 === void 0 ? void 0 : _tempData$countryName2.map(obj => {\n        if ((obj === null || obj === void 0 ? void 0 : obj.daily_people_vaccinated) === undefined) {\n          return 0;\n        }\n        return (obj === null || obj === void 0 ? void 0 : obj.daily_people_vaccinated) / 100;\n      });\n      setdailyData(dailydata);\n    }, [countryName]);\n    const w = 600;\n    const h = 500;\n    const svg = select(svgref.current).attr(\"width\", w).attr(\"height\", h).style(\"background\", \"#d3d3d3\").style(\"margin-top\", \"50\").style(\"margin-left\", \"50\").style(\"overflow\", \"visible\");\n    if (dailydata) {\n      // setting scalling\n      const xScale = scaleLinear().domain([0, (dailydata === null || dailydata === void 0 ? void 0 : dailydata.length) - 1]).range([0, w]);\n      const yScale = scaleLinear().domain([0, max(dailydata)]).range([h, 0]);\n      const geLine = line().x((d, i) => {\n        return xScale(i);\n      }).y(yScale).curve(curveCardinal);\n\n      // setting the axis\n      const xAxis = axisBottom(xScale).ticks(5).tickFormat(i => i);\n      const yAxis = axisLeft(yScale).ticks(5);\n      svg.append(\"g\").call(xAxis).attr(\"transform\", `translate(0,${h})`);\n      svg.append(\"g\").call(yAxis);\n\n      // setting up the data for the svg\n      svg.selectAll(\".line\").data([dailydata]).join(\"path\").attr(\"d\", d => {\n        return geLine(d);\n      }).attr(\"fill\", \"none\").attr(\"stroke\", \"black\");\n      // setdailyData(tempData[countryName]);\n    } else {\n      setdailyData(null);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: svgref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 10\n  }, this);\n};\n_s(LineChart, \"5rBUmWRGjOXGgBTVCZM8YQ91360=\");\n_c = LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["axisBottom","axisLeft","curveCardinal","line","max","scaleLinear","select","json","useEffect","useRef","useState","LineChart","countryName","setCountryName","dailydata","setdailyData","svgref","render","then","data","tempData","reduce","accumulator","d","obj","country","map","daily_people_vaccinated","undefined","w","h","svg","current","attr","style","xScale","domain","length","range","yScale","geLine","x","i","y","curve","xAxis","ticks","tickFormat","yAxis","append","call","selectAll","join"],"sources":["/Users/chenze/Desktop/SWEN422/swen422-assignment3-1/Example/src/Components/LineChart.js"],"sourcesContent":["import {\n  axisBottom,\n  axisLeft,\n  curveCardinal,\n  line,\n  max,\n  scaleLinear,\n  select,\n  json,\n} from \"d3\";\nimport { useEffect, useRef, useState } from \"react\";\n\nexport const LineChart = ({ countryName, setCountryName }) => {\n  //   const [testdata] = useState([25, 50, 35, 15, 94, 10]);\n  //   const [vacdata, setvacData] = useState(\n  //     data?.vacData?.data?.map((obj) => {\n  //       if (obj?.daily_people_vaccinated === undefined) {\n  //         return 0;\n  //       }\n  //       return obj?.daily_people_vaccinated / 100;\n  //     })\n  //   );\n  const [dailydata, setdailyData] = useState();\n  const svgref = useRef();\n  const render = () => {};\n  useEffect(() => {\n    json(\"vaccinations.json\", {}).then(\n      (data) => {\n        //  console.log(data[0]);\n        // setvacData(data[0]);\n        const tempData = data?.reduce((accumulator, d) => {\n          // get the\n          const obj = {\n            country: d.country,\n            data: d.data,\n          };\n          // console.log(obj);\n          accumulator[d.country] = obj;\n          return accumulator;\n        }, {});\n\n        const dailydata = tempData[countryName]?.data?.map((obj) => {\n          if (obj?.daily_people_vaccinated === undefined) {\n            return 0;\n          }\n          return obj?.daily_people_vaccinated / 100;\n        });\n        setdailyData(dailydata);\n      },\n      [countryName]\n    );\n    const w = 600;\n    const h = 500;\n    const svg = select(svgref.current)\n      .attr(\"width\", w)\n      .attr(\"height\", h)\n      .style(\"background\", \"#d3d3d3\")\n      .style(\"margin-top\", \"50\")\n      .style(\"margin-left\", \"50\")\n      .style(\"overflow\", \"visible\");\n    if (dailydata) {\n      // setting scalling\n      const xScale = scaleLinear()\n        .domain([0, dailydata?.length - 1])\n        .range([0, w]);\n\n      const yScale = scaleLinear()\n        .domain([0, max(dailydata)])\n        .range([h, 0]);\n      const geLine = line()\n        .x((d, i) => {\n          return xScale(i);\n        })\n        .y(yScale)\n        .curve(curveCardinal);\n\n      // setting the axis\n      const xAxis = axisBottom(xScale)\n        .ticks(5)\n        .tickFormat((i) => i);\n      const yAxis = axisLeft(yScale).ticks(5);\n\n      svg.append(\"g\").call(xAxis).attr(\"transform\", `translate(0,${h})`);\n      svg.append(\"g\").call(yAxis);\n\n      // setting up the data for the svg\n      svg\n        .selectAll(\".line\")\n        .data([dailydata])\n        .join(\"path\")\n        .attr(\"d\", (d) => {\n          return geLine(d);\n        })\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", \"black\");\n      // setdailyData(tempData[countryName]);\n    } else {\n      setdailyData(null);\n    }\n  });\n\n  return <svg ref={svgref}></svg>;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}